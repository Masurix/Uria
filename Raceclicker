do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;v29=function()local v39=332 -(307 + 25);local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v39==(1 + 1)) then local v86=0 -0;while true do if (1==v86) then v39=3;break;end if ((0 -0)==v86) then v44=nil;v45=nil;v86=1 -0;end end end if (v39==(3 + 0)) then v46=nil;while true do if (v40==(1323 -(1177 + 145))) then local v96=1496 -(882 + 614);while true do if (v96~=(0 + 0)) then else v45=v24();v46={};v96=1 + 0;end if (2==v96) then v40=2;break;end if ((1896 -(1436 + 459))==v96) then for v102=1,v45 do local v103=0 -0;local v104;local v105;local v106;local v107;while true do if (v103==(4 -2)) then while true do if (v104~=0) then else local v118=0 + 0;while true do if ((3 -2)==v118) then v104=1 + 0;break;end if (v118~=(0 -0)) then else v105=0 + 0;v106=nil;v118=1 + 0;end end end if ((1 + 0)==v104) then v107=nil;while true do if ((0 -0)==v105) then local v217=0;while true do if (v217==(1 + 0)) then v105=2 -1;break;end if (v217==0) then v106=v22();v107=nil;v217=3 -2;end end end if (v105~=(1 -0)) then else if (v106==(647 -(149 + 497))) then v107=v22()~=0;elseif (v106==(2 -0)) then v107=v25();elseif (v106~=(2 + 1)) then else v107=v26();end v46[v102]=v107;break;end end break;end end break;end if (v103==(0 -0)) then v104=0;v105=nil;v103=3 -2;end if (v103~=1) then else v106=nil;v107=nil;v103=7 -5;end end end v44[3]=v22();v96=9 -7;end end end if (v40==(0 -0)) then v41={};v42={};v43={};v44={v41,v42,nil,v43};v40=1 + 0;end if ((4 -2)~=v40) then else local v97=367 -(83 + 284);while true do if (v97==(1608 -(1449 + 158))) then for v108=1 + 0,v24() do v43[v108]=v24();end return v44;end if (v97~=0) then else for v110=1119 -(766 + 352),v24() do local v111=0 -0;local v112;local v113;local v114;local v115;while true do if (v111==(1141 -(922 + 217))) then while true do if (v112~=0) then else v113=0 -0;v114=nil;v112=1;end if (v112==(1 + 0)) then v115=nil;while true do if (v113~=1) then else while true do if (v114~=(1962 -(1921 + 41))) then else v115=v22();if (v21(v115,1 + 0,1684 -(334 + 1349))==(631 -(94 + 537))) then local v252=0 + 0;local v253;local v254;local v255;local v256;while true do if ((0 -0)==v252) then v253=0 + 0;v254=nil;v252=123 -(94 + 28);end if (v252==(1569 -(1110 + 457))) then while true do if (v253==0) then local v306=0;local v307;while true do if (v306~=0) then else v307=0 + 0;while true do if (0==v307) then local v348=324 -(142 + 182);while true do if (v348==(0 + 0)) then v254=v21(v115,2,10 -7);v255=v21(v115,1016 -(362 + 650),493 -(58 + 429));v348=2 -1;end if (v348==(1 + 0)) then v307=1 -0;break;end end end if (v307~=1) then else v253=1 + 0;break;end end break;end end end if (v253==(323 -(294 + 28))) then local v308=0 + 0;local v309;while true do if ((0 -0)==v308) then v309=1537 -(171 + 1366);while true do if (v309==(472 -(390 + 82))) then v256={v23(),v23(),nil,nil};if (v254==(0 + 0)) then local v349=1092 -(748 + 344);while true do if (v349==(0 -0)) then v256[1778 -(559 + 1216)]=v23();v256[4 + 0]=v23();break;end end elseif (v254==(2 -1)) then v256[143 -(87 + 53)]=v24();elseif (v254==2) then v256[1 + 2]=v24() -((5 -3)^(51 -35));elseif (v254==3) then local v362=0;local v363;while true do if (v362==0) then v363=0;while true do if (v363==(0 -0)) then v256[1955 -(702 + 1250)]=v24() -((186 -(164 + 20))^16);v256[4]=v23();break;end end break;end end end v309=654 -(525 + 128);end if (v309==(4 -3)) then v253=9 -7;break;end end break;end end end if (v253~=(7 -4)) then else if (v21(v255,1646 -(408 + 1235),4 -1)~=1) then else v256[4]=v46[v256[9 -5]];end v41[v110]=v256;break;end if (v253~=(1694 -(631 + 1061))) then else local v311=0 + 0;while true do if ((0 -0)==v311) then if (v21(v255,1 + 0,1 + 0)==1) then v256[2 + 0]=v46[v256[1 + 1]];end if (v21(v255,3 -1,3 -1)==(80 -(19 + 60))) then v256[3]=v46[v256[3]];end v311=1 + 0;end if (v311==(86 -(30 + 55))) then v253=3;break;end end end end break;end if (v252~=(879 -(388 + 490))) then else local v287=0 -0;while true do if (1~=v287) then else v252=1 + 1;break;end if ((0 + 0)==v287) then v255=nil;v256=nil;v287=2 -1;end end end end end break;end end break;end if (v113~=(0 + 0)) then else v114=0 + 0;v115=nil;v113=1 + 0;end end break;end end break;end if (v111~=(1857 -(760 + 1096))) then else v114=nil;v115=nil;v111=2;end if ((0 -0)~=v111) then else v112=0 + 0;v113=nil;v111=1 + 0;end end end for v116=1 -0,v24() do v42[v116-(266 -(259 + 6))]=v29();end v97=631 -(96 + 534);end end end end break;end if (v39==(1 + 0)) then local v87=0 -0;while true do if (v87==(1994 -(1337 + 656))) then v39=2;break;end if (v87==(0 -0)) then v42=nil;v43=nil;v87=2 -1;end end end if (v39==(154 -(129 + 25))) then v40=790 -(67 + 723);v41=nil;v39=1004 -(277 + 726);end end end;v30=nil;v18=7;end if (v18==7) then v30=function(v31,v32,v33)local v47=v31[1];local v48=v31[2];local v49=v31[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v73=v47;local v74=v48;local v75=v49;local v76=v28;local v77={};local v78={};local v79={};for v88=0 + 0,v69 do if ((v88>=v75) or ((5484 -(490 + 640))<(585 + 958))) then v77[v88-v75]=v68[v88 + (2 -1)];else v79[v88]=v68[v88 + (1 -0)];end end local v80=(v69-v75) + 1 + 0;local v81;local v82;while true do local v89=0;while true do if ((v89==(3 -2)) or ((6937 -4753)>=(7080 -4648))) then if (((57 + 2915)>(391 + 1395)) and (v82<=20)) then if ((v82<=(159 -(103 + 47))) or (((490 + 398) -569)>=(1641 -1133))) then if ((v82<=(4 + 0)) or ((1678 -(1293 + 225))>=(5523 -(4960 -(1190 + 185))))) then if (((5730 -3567)==(2456 -(285 + 8))) and (v82<=(2 -1))) then if ((v82>(0 + 0)) or (((1443 -(82 + 869)) + 1846)>(2917 + 1641))) then v79[v81[819 -(242 + (1391 -816))]]();else v79[v81[2]]=v79[v81[962 -(905 + 54)]] + v81[4 + 0];end elseif ((2157<=(8331 -4550)) and (v82<=(5 -3))) then v79[v81[2 + 0]]=v33[v81[2 + 1]];elseif ((v82==(1 + 2)) or (4130>=4709)) then v79[v81[908 -(112 + 794)]]=v79[v81[1569 -(1031 + 272 + 263)]]%v81[4];elseif (((4085 -(47 + (167 -40)))>=2274) and v79[v81[1688 -(820 + 866)]]) then v66=v66 + (662 -(353 + 308));else v66=v81[5 -2];end elseif ((v82<=(584 -(122 + 456))) or (4219<((4510 + 1529) -2436))) then if ((v82==(5 + 0)) or ((3808 -1710)==(432 + 566 + 2052))) then local v122=0 + 0 + 0;local v123;local v124;while true do if (((15568 -11241)>=(1526 + 147)) and (v122==(1 -0))) then while true do if ((1606<=(9601 -6162)) and (v123==(0 + 0))) then v124=v81[(2 + 3) -3];v79[v124]=v79[v124]();break;end end break;end if ((3744>338) and (v122==(119 -(23 + 96)))) then v123=0;v124=nil;v122=1 + 0;end end else v79[v81[(2 -0) + (0 -0)]]=v79[v81[14 -11]][v81[4 + 0]];end elseif ((v82<=(22 -15)) or ((3309 -1792)<(2747 -(1665 + 34)))) then local v127=1445 -(156 + 1289);local v128;local v129;while true do if ((1757==(3313 -(995 + 561))) and (v127==0)) then local v219=1754 -(44 + 1710);while true do if ((v219==(0 + (0 -0))) or ((1134 + 1558)>=(2645 + 604))) then v128=v81[33 -(13 + (1591 -(922 + 651)))];v129=v79[v81[579 -(448 + 128)]];v219=2 -1;end if ((v219==1) or ((4415 + 115)==(132 + 2780))) then v127=(1733 -(419 + 1313)) + 0;break;end end end if (((116 + 36)<=(34 + 3627)) and (v127==((2 -0) -1))) then v79[v128 + (1145 -(1124 + 20))]=v129;v79[v128]=v129[v81[4 + 0]];break;end end elseif (((291 + 4631)>=(1714 -573)) and (v82>(1324 -(871 + 445)))) then local v169=0 -0;local v170;local v171;while true do if ((v169==((375 -184) -(142 + (143 -94)))) or ((1571 -(369 + 109))==(3015 -1915))) then v170=1408 -(262 + 978 + 168);v171=nil;v169=1 + 0;end if (((1215 + 354)<(3803 -2198)) and (v169==(3 -2))) then while true do if ((1016<=(4104 -(381 + 1013))) and ((0 + 0)==v170)) then v171=v79[v81[1568 -(814 + 750)]];if ( not v171 or (747>=3153)) then v66=v66 + 1 + (0 -0);else local v279=0 + 0 + 0 + 0;local v280;while true do if ((v279==(0 -0)) or ((16561 -(29136 -16182))<(1646 -754))) then v280=0 + 0;while true do if ((v280==(1574 -(586 + 988))) or (690<=((1036 + 775) -(739 + 403)))) then v79[v81[8 -6]]=v171;v66=v81[1050 -(287 + (1925 -(398 + 767)))];break;end end break;end end end break;end end break;end end else local v172=1193 -(592 + 601);local v173;local v174;while true do if (((6678 -(8578 -6327))>2072) and (v172==(1 + 0))) then while true do if ((v173==(0 + 0)) or (2052>(14061 -10834))) then v174=v81[(3 + 0) -1];v79[v174]=v79[v174](v13(v79,v174 + ((1326 -(32 + 165)) -(144 + 984)),v67));break;end end break;end if (((2646 + 542)>2061) and (v172==(0 -0))) then v173=1175 -(198 + 658 + 319);v174=nil;v172=1 + 0;end end end elseif ((v82<=(645 -(619 + 12))) or ((1572 -1138)>((4027 + 1820) -((166 -(9 + 14)) + 1054)))) then if (((1515 -(761 + 144))<(3347 -(315 + (571 -(356 + 152))))) and (v82<=(871 -(482 + 378)))) then if ((v82==(21 -11)) or ((1028 + 424)>=(4020 + 39))) then local v130=0 -0;local v131;local v132;local v133;local v134;while true do if (((1466 + 523)<(4799 -2614)) and (v130==(1581 -(1127 + 452)))) then while true do if (((2548 + 579)<(3684 + 500)) and (v131==(1 + 0))) then v134=nil;while true do if ((v132==(1586 -((3221 -1973) + 337))) or (4266<=100)) then for v281=v133 + (3 -2),v81[4] do v134=v134   .. v79[v281];end v79[v81[2]]=v134;break;end if ((v132==(0 -0)) or ((1693 + 2550)<=(1218 -(13 + 95)))) then local v268=0 -0;local v269;while true do if ((((2647 + 3817) -(52 + 1591))>=2380) and (v268==0)) then v269=0 + 0;while true do if ((v269==(94 -(82 + 12))) or (2846==((2367 -(112 + 49)) + 1817))) then v133=v81[5 -2];v134=v79[v133];v269=1 -0;end if ((((836 + 1825) -(155 + 1))>2200) and (((1796 -(658 + 1137)) + 0 + 0)==v269)) then v132=759 -(625 + 133);break;end end break;end end end end break;end if ((v131==(0 -0)) or (3483>=(5160 -(669 + 102)))) then v132=0;v133=nil;v131=3 -2;end end break;end if ((4501>(4731 -(398 + 159 + 306))) and (v130==(4 -3))) then v133=nil;v134=nil;v130=1164 -(220 + 942);end if (((767 + 377)>(1649 -(352 + 1010))) and (v130==(0 -0))) then v131=0 -0;v132=nil;v130=4 -3;end end else local v135=0;local v136;local v137;local v138;while true do if ((v135==0) or ((2938 -1798)>(9560 -5019))) then v136=0 + 0;v137=nil;v135=1 + (0 -0);end if (((2236 + 447)<=4004) and (v135==(1 -0))) then v138=nil;while true do if ((v136==(2 -1)) or ((11178 -6406)<(839 + 2706))) then while true do if (((2721 + 962)>3186) and (v137==(0 -0))) then v138=v81[7 -5];v79[v138]=v79[v138](v79[v138 + (2 -1)]);break;end end break;end if ((2847>(864 + (1080 -(468 + 592)))) and (v136==(0 -0))) then local v239=0 -0;while true do if ((((10602 -5402) -(966 + 2256))<(5058 -(673 + 248))) and (v239==(3 -2))) then v136=1 + 0;break;end if ((v239==(677 -((630 -207) + 254))) or ((694 + 2409)<=(2770 -(16 + 1033)))) then v137=0 -0;v138=nil;v239=1 + 0;end end end end break;end end end elseif ((v82<=((19 -9) + 2)) or (316>1518)) then v79[v81[2 + 0]]={};elseif ((v82>(19 -6)) or (3404==(3158 -(18 + 294)))) then local v175=0 -(1080 -(319 + 761));local v176;local v177;local v178;local v179;local v180;while true do if ((1897>=(360 + 735)) and (v175==2)) then v180=nil;while true do if ((v176==2) or (4540==(12089 -7903))) then for v272=v177,v67 do local v273=0;local v274;while true do if ((((7773 -(115 + 184)) -3646)>(4011 -(429 + 777))) and (v273==(0 + 0))) then v274=1968 -(291 + 1677);while true do if ((v274==(0 + 0)) or ((151 + 521)>=(2258 -(237 + 732)))) then v180=v180 + ((1489 -(285 + 943)) -(62 + 198));v79[v272]=v178[v180];break;end end break;end end end break;end if ((1237>=(844 -(317 + 6))) and (v176==(1920 -(1778 + 142)))) then v177=v81[1 + 1];v178,v179=v76(v79[v177](v79[v177 + ((2 -1) -0)]));v176=1407 -(605 + 801);end if (((2604 + 2374)==4978) and ((1856 -(750 + 15 + 1090))==v176)) then local v261=0 -0;while true do if ((2322<(11388 -8477)) and (v261==(204 -(21 + 183)))) then v67=(v179 + v177) -(4 -(981 -(633 + 345)));v180=113 -(36 + 77);v261=181 -(97 + 83);end if (((1 -0)==v261) or ((2829 + 1806)==(326 + 2299))) then v176=4 -(1 + 1);break;end end end end break;end if ((v175==((0 -0) + 0)) or ((1782 -1284)>=843)) then v176=808 -(7 + 801);v177=nil;v175=1;end if ((v175==(2 -1)) or (4599<=(408 + 1309 + 905))) then v178=nil;v179=nil;v175=6 -4;end end else v79[v81[1 + 1]]=v79[v81[1569 -(659 + 907)]]/v81[1 + 2 + 1];end elseif (((14 + 55)==(172 -(61 + 42))) and (v82<=(12 + 5))) then if ((v82<=((1484 -(1288 + 162)) -19)) or ((4280 -(995 + (2046 -(230 + 1539))))>=3548)) then v66=v81[3];elseif (((9311 -6923)<=(6998 -4127)) and (v82==(43 -27))) then v79[v81[2]]=v79[v81[3]];elseif ((v81[1142 -(147 + 993)]==v79[v81[4]]) or ((6397 -2149)<(11057 -6833))) then v66=v66 + (942 -(516 + 425));else v66=v81[3];end elseif (((624 -(1140 -910))<((19852 -9346) -6714)) and (v82<=((14 -10) + 14))) then v79[v81[4 -2]]=v30(v74[v81[8 -(5 + 0)]],nil,v33);elseif ((v82==((674 -(605 + 64)) + 14)) or ((1056 + 3771)==(1101 + 464))) then v79[v81[3 -1]]=v79[v81[11 -8]] -v79[v81[4]];else local v185=0 + 0;local v186;local v187;local v188;while true do if ((v185==0) or ((2607 -(502 + 715))>(5798 -(940 + 111 + 432)))) then v186=v81[2];v187=v79[v186];v185=443 -(52 + 390);end if ((v185==(1 + 0)) or (((21735 -14204) -2883)<(1063 + 166))) then v188=v81[895 -(637 + (1459 -(1049 + 155)))];for v240=2 -1,v188 do v187[v240]=v79[v186 + v240];end break;end end end elseif (((5470 -(1116 + 319))>(2538 + 80)) and (v82<=(5 + 25))) then if ((2418<=(2002 + 1470)) and (v82<=(9 + 16))) then if (((231 + 633 + 24 + 1299)<=(6036 -(905 + 286))) and (v82<=(81 -59))) then if (((1248 -(362 + 445))==((1876 -(512 + 304)) -619)) and (v82==(32 -11))) then if ((v79[v81[1 + 1]]==v81[557 -((27 -17) + 543)]) or ((7786 -(3640 + 1677))==(7719 -5074))) then v66=v66 + 1;else v66=v81[3 + 0];end else local v142=0;local v143;local v144;local v145;local v146;while true do if ((v142==(1 + 0)) or ((11892 -7834)<(286 -187))) then local v223=127 -((1782 -(74 + 1608)) + 27);while true do if ((v223==(0 + 0 + 0)) or (3626==((3521 -(421 + 1024)) + 958 + 1294))) then v67=(v145 + v143) -(990 -(387 + 602));v146=270 -(98 + 172);v223=1;end if (((3527 -(565 + 502))<2554) and (v223==((234 + 218) -(357 + 94)))) then v142=(2 + 0) -0;break;end end end if ((v142==(1593 -(316 + 1277))) or ((266 + 697)>3421)) then local v224=0 -(0 + 0);while true do if ((((1901 -(178 + 624)) + 575)>(1605 -(11 + 14))) and (((43 + 46) -(18 + 70))==v224)) then v142=1628 -(350 + 1277);break;end if ((925<(5606 -(383 + 1613))) and (v224==0)) then v143=v81[604 -(333 + 65 + 204)];v144,v145=v76(v79[v143](v13(v79,v143 + 1 + 0,v81[3])));v224=1;end end end if (((12 + 23)<=64) and (((1267 + 442) -(1031 + 676))==v142)) then for v228=v143,v67 do local v229=1731 -(41 + 1690);local v230;while true do if ((((9486 -6271) -(13 + 192))<4988) and (v229==(0 -(1348 -(1057 + 291))))) then v230=877 -(198 + 31 + 648);while true do if (((2920 -(206 + 103))>=(128 + 1403)) and (v230==((0 + 0) -0))) then v146=v146 + (2 -1);v79[v228]=v144[v146];break;end end break;end end end break;end end end elseif (((3930 -(431 + 122))==(5961 -2584)) and (v82<=(1948 -(632 + 1293)))) then v79[v81[1182 -(492 + 688)]]=v79[v81[6 -3]] * v81[1247 -(643 + 600)];elseif ((v82==(9 + 15)) or (1089<=(25 + 94))) then local v190=1681 -(704 + 977);local v191;local v192;while true do if ((((4566 -(40 + 297)) -(272 + 72))==(15243 -11358)) and (v190==(0 -0))) then v191=0 -(0 + 0);v192=nil;v190=(2632 -(152 + 1695)) -(637 + 147);end if ((2321>(733 + 47)) and (v190==(636 -(448 + 187)))) then while true do if (((1358 -826)<=(3215 + 263 + 44)) and (v191==(0 + 0))) then v192=v81[2 + 0];v79[v192]=v79[v192](v13(v79,v192 + (1819 -(1679 + 139)),v81[555 -(190 + 110 + 252)]));break;end end break;end end else v79[v81[2]]=v32[v81[(805 + 926) -(438 + 1290)]];end elseif (((7033 -5168)<1978) and (v82<=27)) then if (((3623 -2567)==(170 + 886)) and (v82==(26 + 0))) then local v148=119 -(36 + 83);local v149;local v150;local v151;while true do if ((v148==(1 + 0)) or ((10341 -7466)<=(1564 -(64 + 17)))) then v151=nil;while true do if ((((221 + 167) -243)==(109 + 36)) and (v149==(0 + 0 + 0))) then local v244=997 -(485 + 512);local v245;while true do if ((v244==(0 + 0)) or ((3527 -(303 + 268))<=(2302 -(748 + 15)))) then v245=0;while true do if (((1878 -((1864 -821) + 601))==(2066 -(1655 + 177))) and (v245==(2 -1))) then v149=1 + 0;break;end if (((3128 + (2007 -1426))==(1610 + 2099)) and (v245==(0 + 0))) then local v301=0 -0;while true do if ((v301==((1356 -(936 + 420)) + 0)) or ((8850 -4041)<467)) then v150=v81[4 -2];v151=v79[v150];v301=1 + 0;end if ((v301==(486 -(365 + 120))) or ((7935 -5394)>(6423 -((2310 -1657) + 841)))) then v245=1276 -(1216 + (2043 -(1055 + 929)));break;end end end end break;end end end if (((672 + 60)>(1442 -874)) and (v149==(1010 -(458 + 121 + 430)))) then for v248=v150 + (1 -0),v81[3] do v7(v151,v79[v248]);end break;end end break;end if (((21 + 1 + 0)<(1226 + 3069)) and (v148==0)) then v149=0;v150=nil;v148=72 -(21 + 50);end end else local v152=0 + 0;local v153;while true do if (((1729 + 1039)<=(6362 -2017)) and (v152==(0 + 0))) then v153=v81[7 -5];v79[v153](v79[v153 + (1602 -(218 + 1383))]);break;end end end elseif ((v82<=(28 + 0)) or ((3455 -(578 + 25 + 19))==(8696 -3899))) then v79[v81[2 + (1701 -(1699 + 2))]][v81[3 -0]]=v81[4 + 0];elseif ((((3031 -(1315 + 627)) + 785)<(2944 -(527 + 243))) and (v82==(86 -57))) then v79[v81[2]]=v81[3 + 0];elseif (((6056 -2532)>=(3282 -(29 + 131))) and (v79[v81[2]]~=v81[19 -15])) then v66=v66 + 1;else v66=v81[7 -4];end elseif (((754 + 3847)==(13164 -8563)) and (v82<=(15 + 20))) then if ((558<2557) and (v82<=32)) then if ((v82>(104 -73)) or ((175 -107)>=(5579 -2612))) then v79[v81[2 + 0]][v81[3 + 0]]=v79[v81[10 -6]];else v79[v81[1 + 1]]=v79[v81[235 -(97 + (313 -178))]] + v79[v81[40 -((204 -(8 + 166)) + 6)]];end elseif ((v82<=(24 + 9)) or ((148 + 4232)<(4511 -(12 + 1170)))) then local v159=1974 -(361 + 1613);local v160;local v161;local v162;while true do if (((189 + 209)<=(692 + 2538)) and ((1 + 0)==v159)) then v162=nil;while true do if ((v160==(1 + (808 -(741 + 67)))) or ((276 -154)==2677)) then for v249=1, #v78 do local v250=1469 -(1059 + 410);local v251;while true do if (((0 -(0 + 0))==v250) or ((6666 -4107)>4658)) then v251=v78[v249];for v288=0 + 0, #v251 do local v289=960 -((972 -(40 + 86)) + 114);local v290;local v291;local v292;local v293;while true do if ((v289==(2 + 0)) or (1279>=(5036 -2958))) then while true do if (((10747 -6590)>=(1078 + 68)) and (1==v290)) then v293=v291[1 + 1];if ((4109>(1118 + 172 + 2424)) and (v292==v79) and (v293>=v161)) then local v346=1646 -(1369 + 277);local v347;while true do if ((((14470 -9402) -(576 + 592))>(7129 -4422)) and (v346==0)) then v347=(0 + 0) -0;while true do if (((2215 -(181 + 86))<=(4166 -2046)) and (v347==(1218 -(1154 + 64)))) then v162[v293]=v292[v293];v291[1]=v162;break;end end break;end end end break;end if ((v290==(0 + 0)) or ((4676 -3571)>=(4749 -(548 + 398)))) then v291=v251[v288];v292=v291[1 + 0];v290=243 -(193 + 49);end end break;end if ((v289==(222 -(20 + 202))) or ((113 + (1996 -(1052 + 182)))==(2148 + 1497))) then v290=0 + 0;v291=nil;v289=999 -(808 + 75 + (216 -101));end if (((14568 -10728)>2762) and (v289==(606 -(308 + 297)))) then v292=nil;v293=nil;v289=1 + 1 + 0;end end end break;end end end break;end if (((6336 -4426)<=(748 + 3842)) and (v160==0)) then local v246=0 -0;while true do if (((143 -92)<(6450 -1567)) and (v246==(349 -(296 + 52)))) then v160=1 + 0;break;end if ((v246==0) or (1550<(1603 -(7 + 123)))) then local v275=0 -0;while true do if ((v275==(1 -0)) or ((2022 -(329 + 31))<=(1019 + 67))) then v246=1491 -(1437 + 53);break;end if (((4591 -(327 + (582 -362)))>=(2792 -(404 + 551))) and (v275==(747 -(436 + 311)))) then v161=v81[1 + 1];v162={};v275=1;end end end end end end break;end if ((2706<(3158 + 314)) and (0==v159)) then v160=43 -(35 + 8);v161=nil;v159=(4560 -2622) -(42 + 1895);end end elseif ((v82>(2 + 32)) or ((4468 -(421 + 465))>=(1332 + (4228 -(564 + 871))))) then local v197=0 + 0;local v198;local v199;while true do if ((v197==(1 -(0 + 0))) or ((2971 -1413)>(720 + 1107))) then while true do if ((2776<=(1841 + (2701 -(1515 + 148)))) and (((282 -(251 + 31)) + 0)==v198)) then v199=v81[190 -((164 -86) + 110)];v79[v199](v13(v79,v199 + (807 -((931 -270) + 145)),v67));break;end end break;end if ((0==v197) or ((3889 -(41 + 1148))<(4098 -1657))) then v198=0 + 0;v199=nil;v197=2 -1;end end else v79[v81[2]][v79[v81[7 -4]]]=v79[v81[4]];end elseif ((v82<=(1374 -(822 + 514))) or ((4743 -(577 + 401))<=(2250 + 47))) then if ((v82<=36) or ((989 + 1437)==958)) then for v166=v81[2],v81[1 + 1 + 1] do v79[v166]=nil;end elseif (((433 + 2593)>(949 -(374 + 471))) and (v82==(1952 -(663 + (2946 -1694))))) then v33[v81[3 + 0 + 0]]=v79[v81[2 + 0]];else local v204=0 -0;local v205;local v206;local v207;local v208;local v209;while true do if ((v204==(1 + (249 -(76 + 173)))) or (2428>3138)) then v207=nil;v208=nil;v204=1433 -(217 + 1214);end if (((417 + 69)==486) and ((3 -1)==v204)) then v209=nil;while true do if ((v205==(0 -(1244 -(402 + 842)))) or ((4120 -(263 + 64))==(32 + 153))) then v206=0 -0;v207=nil;v205=1971 -(221 + 1749);end if (((18516 -13956)>=(2814 + 124)) and (v205==(1 + 1))) then while true do if (((886 + 1395)>=((2411 -758) -(25 + 329))) and (v206==1)) then local v294=0;local v295;while true do if (((4275 -(781 + 493))>=2207) and (v294==(0 + 0))) then v295=1268 -(514 + 754);while true do if ((v295==1) or ((3243 -(37 + 21))<=(9438 -6872))) then v206=2 + 0;break;end if ((v295==(1289 -(539 + 750))) or (((1114 + 2167) -(353 + 148))>=(2829 + 1061))) then v209={};v208=v10({},{__index=function(v329,v330)local v335=0 -0;local v336;local v337;local v338;while true do if ((((3030 -(551 + 896)) + 16)==1599) and (v335==(1 + 0))) then v338=nil;while true do if (((2217 + 249)<=(1451 + 2880)) and (v336==(0 + 0))) then local v351=0 + (1346 -(791 + 555));while true do if (((5639 -(612 + 1154))>(11409 -8429)) and (v351==(1573 -(1493 + 80)))) then v337=1269 -(407 + 315 + 547);v338=nil;v351=687 -(259 + 427);end if ((v351==(2 -1)) or (1871<=(206 + 1552))) then v336=275 -(148 + 126);break;end end end if ((v336==1) or (2256<(345 + 166))) then while true do if ((v337==(0 + 0)) or ((12857 -8453)==1700)) then local v360=1837 -(1361 + 476);local v361;while true do if ((v360==(0 + 0)) or ((1582 + 2381)==4342)) then v361=1490 -(1407 + 83);while true do if ((452<=(7 + 1213)) and (v361==0)) then v338=v209[v330];return v338[1][v338[2]];end end break;end end end end break;end end break;end if (((3793 -(703 + 997))<4898) and (v335==(1872 -(1684 + 188)))) then v336=0 -0;v337=nil;v335=1 -(0 -0);end end end,__newindex=function(v329,v330,v331)local v339=0;local v340;local v341;while true do if (((5531 -4095)<(661 + 2988)) and (1==v339)) then while true do if (((300 + 4011)>=(511 + 1936)) and (0==v340)) then v341=v209[v330];v341[1 + 0][v341[2]]=v331;break;end end break;end if ((v339==(1118 -(199 + 919))) or (904>((6876 -2429) -(848 + 381 + 551)))) then v340=0;v341=nil;v339=696 -(117 + 578);end end end});v295=2 -1;end end break;end end end if ((v206==(1559 -(511 + 1046))) or ((1163 + 129)>=(8553 -3975))) then for v303=560 -(202 + 357),v81[1804 -(1479 + 321)] do local v304=0 + 0;local v305;while true do if ((((5040 -(1254 + 478)) -(64 + 434))==2810) and (v304==(1 + 0))) then if (((2231 -(104 + 539))==(2891 -(961 + 342))) and (v305[31 -(11 + 19)]==(8 + 7 + 1))) then v209[v303-1]={v79,v305[3]};else v209[v303-(386 -((844 -562) + 103))]={v32,v305[3]};end v78[ #v78 + (1472 -(643 + 828))]=v209;break;end if ((v304==0) or (122>(3249 -(1355 + 352)))) then v66=v66 + 1 + 0;v305=v73[v66];v304=1 + 0;end end end v79[v81[1139 -(384 + 753)]]=v30(v207,v208,v33);break;end if ((0==v206) or ((3640 -(522 + 346))>(13548 -8588))) then local v297=1526 -(762 + 764);local v298;while true do if ((v297==0) or ((3683 -(2456 -(156 + 99)))>(86 + 258 + 18 + 1674))) then v298=0 -0;while true do if ((3719>=(4112 -2868)) and (v298==1)) then v206=1 -0;break;end if ((v298==0) or ((866 + 206)<(2482 -1534))) then v207=v74[v81[3]];v208=nil;v298=591 -(575 + 15);end end break;end end end end break;end if ((3572==(4270 -(275 + 11 + 412))) and ((2 -1)==v205)) then v208=nil;v209=nil;v205=587 -(529 + 56);end end break;end if (((1706 -(1330 + 376))==v204) or (1837>(3632 -1401))) then v205=0 + 0;v206=nil;v204=1 + 0 + 0;end end end elseif ((v82<=(1866 -(1234 + 593))) or ((27 + 23)>=(3545 + (1290 -(370 + 98))))) then local v163=0 + 0;local v164;local v165;while true do if ((v163==(1 -0)) or ((1425 + 27)<(499 + 519))) then while true do if ((1024<=3891) and (v164==(0 + 0))) then v165=v81[3 -(1758 -(303 + 1454))];v79[v165](v13(v79,v165 + (1 -0),v81[1 + 2]));break;end end break;end if ((v163==(0 + (755 -(314 + 441)))) or ((3363 + 604)==(69 + 2156))) then v164=0;v165=nil;v163=(7 -4) -2;end end elseif ((((8140 -5352) + 104 + 194)==(952 + 2134)) and (v82==(1257 -(761 + 456)))) then do return;end else local v210=0;local v211;local v212;local v213;local v214;local v215;local v216;while true do if (((2472 -(254 + 1309))<=(4984 -(602 + 1057))) and (v210==(14 -11))) then while true do if (((353 + 98)<(2991 -2379)) and (v211==(2 + (2 -1)))) then if (((432 + 3221)<(15716 -11552)) and v216) then local v285=0 -0;local v286;while true do if ((v285==(0 + 0)) or ((505 + 415)==((2542 -918) -((2239 -1420) + 176)))) then v286=0;while true do if (((0 + 0)==v286) or (47>=(3282 + 896))) then v79[v214]=v216;v66=v81[1263 -(1112 + (218 -(16 + 54)))];break;end end break;end end else v66=v66 + ((1956 -(266 + 1688)) -1);end break;end if ((v211==1) or (((249 -(62 + 182)) + 463)>=(17710 -13020))) then v214=v212 + 2;v215={v79[v212](v79[v212 + (1 -0)],v79[v214])};v211=2;end if ((v211==(1 + 1)) or ((5435 -4036)>=(900 + (1002 -(23 + 185))))) then for v276=956 -(505 + 450),v213 do v79[v214 + v276]=v215[v276];end v216=v215[2 -1];v211=3 + 0;end if ((v211==(0 -0)) or ((5774 -(662 + 378))<1264)) then local v266=0;while true do if ((v266==0) or ((1228 + 2533)<=(1901 + 151))) then v212=v81[2 + 0];v213=v81[7 -3];v266=3 -2;end if ((((198 -65) + 151)==(745 -461)) and (v266==(511 -(411 + 99)))) then v211=1369 -(1270 + (1356 -(399 + 859)));break;end end end end break;end if ((v210==(1 + 0)) or ((455 + 359)>(941 + 987))) then v213=nil;v214=nil;v210=1 + 1;end if (((5075 -(715 + 276))>=(9747 -7582)) and ((0 -0)==v210)) then v211=(0 -0) + 0;v212=nil;v210=1143 -((1030 -(559 + 262)) + 933);end if ((v210==(2 + 0)) or (1745==(2130 + 979))) then v215=nil;v216=nil;v210=2 + 1;end end end v66=v66 + 1;break;end if ((((0 -0) -0)==v89) or ((2258 -(23 + 51))>((1237 -(245 + 786)) + 2234))) then local v98=0;while true do if ((v98==(0 -0)) or ((15274 -10391)<(2475 -(1327 + 567)))) then v81=v73[v66];v82=v81[1];v98=844 -(463 + 380);end if (((1370 + 1162)>((174 -45) + 24)) and (v98==((264 + 375) -(547 + 91)))) then v89=2 -1;break;end end end end end end A,B=v28(v11(v70));if  not A[1] then local v90=v31[4][v66] or "?";error("Script error at ["   .. v90   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end;return v30(v29(),{},v17)(...);end if (v18==3) then v24=nil;v24=function()local v50,v51,v52,v53=v1(v16,v19,v19 + 3);v19=v19 + 1 + 3;return (v53 * (9952392 + 6824824)) + (v52 * (180986 -115450)) + (v51 * (447 -((100 -73) + 164))) + v50;end;v25=nil;v18=4;end if (v18==4) then v25=function()local v54=v24();local v55=v24();local v56=992 -((610 -(335 + 143)) + 859);local v57=(v21(v55,1 + 0,29 -9) * (((835 -(210 + 622)) -1)^(484 -(397 + 55)))) + v54;local v58=v21(v55,21,1038 -(296 + 711));local v59=((v21(v55,5 + 27)==(4 -3)) and  -(1 + 0)) or 1;if (v58==(1204 -(27 + 1177))) then if (v57==(331 -(175 + 156))) then return v59 * ((902 -(815 + 87)) -(0 + 0));else v58=1 + 0;v56=0 -0;end elseif (v58==(5647 -3600)) then return ((v57==(0 + 0)) and (v59 * ((1 -0)/(0 + 0)))) or (v59 * NaN);end return v8(v59,v58-(1897 -874)) * (v56 + (v57/((8 -6)^((584 -459) -73))));end;v26=nil;v26=function(v34)local v60;if  not v34 then v34=v24();if (v34==0) then return "";end end v60=v3(v16,v19,(v19 + v34) -(1 + 0));v19=v19 + v34;local v61={};for v71=1 + 0, #v60 do v61[v71]=v2(v1(v3(v60,v71,v71)));end return v6(v61);end;v18=5;end if (v18==1) then v21=nil;v21=function(v35,v36,v37)if v37 then local v83=(v35/(2^(v36-(1425 -(1235 + 189)))))%(2^(((v37-((1666 -(1234 + 430)) -(1 + 0))) -(v36-(1 + 0))) + (1028 -(248 + 779))));return v83-(v83%(1 -0));else local v84=((635 -(564 + 68)) -1)^(v36-(2 -1));return (((v35%(v84 + v84))>=v84) and (1 -0)) or (0 + 0);end end;v22=nil;v18=2;end if (v18==2) then v22=function()local v62=v1(v16,v19,v19);v19=v19 + 1;return v62;end;v23=nil;v23=function()local v63=1274 -((2373 -1224) + (1822 -(704 + 993)));local v64;local v65;while true do if (v63==((143 -(96 + 47)) + 0)) then v64,v65=v1(v16,v19,v19 + (4 -2));v19=v19 + ((2564 -(44 + 837)) -(1023 + 658));v63=1 + 0;end if (v63==(260 -(159 + 100))) then return (v65 * (170 + 86)) + v64;end end end;v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v38)if (v1(v38,2)==79) then v20=v0(v3(v38,1,1));return "";else local v85=v2(v0(v38,16));if v20 then local v91=v5(v85,v20);v20=nil;return v91;else return v85;end end end);v18=1;end if (v18==5) then v27=v24;v28=nil;v28=function(...)return {...},v12("#",...);end;v18=6;end end end vv9(),...);end
